name: Release VNULIB Downloader

on:
  push:
    paths:
      - src/VERSION.py
  workflow_dispatch:

jobs:
  build:
    name: build
    strategy:
      matrix:
        os:
          - ubuntu
          - windows
          - macos
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 10
    outputs:
      VERSION: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@main

      - name: Install python
        uses: actions/setup-python@main
        with:
          cache: "pip"

      - name: Install dependacies
        run: |
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Get version
        id: get-version
        run: echo "VERSION=$(cat src/VERSION.py | cut -d "=" -f 2)" >> GITHUB_OUTPUT

      - name: Build EXE
        run: pyinstaller main.py --clean --onefile --noconfirm --console --paths "src" --name "-${{ matrix.os }}-${{ steps.get-version.outputs.VERSION }}"

      - name: Upload to artifact
        uses: actions/upload-artifact@main
        with:
          name: VNULIB-Downloader-${{ matrix.os }}-${{ steps.get-version.outputs.VERSION }}
          path: dist/VNULIB-Downloader-*.exe
          compression-level: 0

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@main

      - name: Upload to Release
        uses: svenstaro/upload-release-action@master
        with:
          body: ${{ needs.build.outputs.VERSION }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./dist/VNULIB-Downloader-*.exe
          release_name: ${{ needs.build.outputs.VERSION }}
          tag: ${{ needs.build.outputs.VERSION }}
          file_glob: true
          overwrite: true
